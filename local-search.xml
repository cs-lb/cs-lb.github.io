<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>树状数组</title>
    <link href="/2024/03/25/algorithm_know/tree-arr/"/>
    <url>/2024/03/25/algorithm_know/tree-arr/</url>
    
    <content type="html"><![CDATA[<h1 id="树状数组"><a href="#树状数组" class="headerlink" title="树状数组"></a>树状数组</h1><h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><ol><li>O(log)的时间复杂度去实现单点修改和区间查询</li><li>数组下标一定要从1开始</li><li>一个数的二进制表示中末尾有几个0就在第几层</li></ol><h2 id="lowbit"><a href="#lowbit" class="headerlink" title="lowbit"></a>lowbit</h2><blockquote><p><code>x &amp; (-x)</code> : 假设 x的二进制数表示 的从右向左数的第一个1所在位为k，则lowbit(x) &#x3D; 2^(k-1)</p></blockquote><blockquote><p>tip: 求 n 的二进制表示的第 k 位数字：<code>n &gt;&gt; k &amp; 1</code></p></blockquote><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ol><li>实现单点修改</li><li>实现求前缀和</li></ol><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">// 构造树状数组的方法</span><br><span class="hljs-comment">// 可以假设原序列a为全0，依次通过“单点修改”操作把每个数加进去，最后就可以形成树状数组了</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br> <br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1e5</span>+<span class="hljs-number">10</span>;<br><br><span class="hljs-type">int</span> n,m;<br><span class="hljs-type">int</span> t[N],tr[N];<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">lowbit</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span>&#123;<br>    <span class="hljs-keyword">return</span> x &amp; (-x);<br>&#125;<br><br><span class="hljs-comment">//在原数组的第x个数加上v</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> v)</span></span>&#123;<br>    <span class="hljs-comment">//注意这里的i是从x开始得</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=x;i&lt;=n;i+=<span class="hljs-built_in">lowbit</span>(i))&#123; <br>        tr[i] += v; <span class="hljs-comment">//在树状数组第i个位置上加上一个值</span><br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//返回原数组前x个数的前缀和</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">query</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span>&#123;<br>    <span class="hljs-type">int</span> sum = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=x; i&gt;<span class="hljs-number">0</span>; i-=<span class="hljs-built_in">lowbit</span>(i))&#123;<br>        sum += tr[i];<br>    &#125;<br>    <span class="hljs-keyword">return</span> sum;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    cin &gt;&gt; n &gt;&gt; m;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin &gt;&gt; t[i];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-built_in">add</span>(i,t[i]); <span class="hljs-comment">//在第i个位置上加上原数组t[i] 构造树状数组</span><br>    &#125;<br>    <span class="hljs-keyword">while</span>(m--)&#123;<br>        <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> k,x,y;<br>        cin &gt;&gt; k &gt;&gt; x &gt;&gt; y;<br>        <span class="hljs-keyword">if</span>(k == <span class="hljs-number">0</span>)&#123;<br>            cout &lt;&lt; <span class="hljs-built_in">query</span>(y) - <span class="hljs-built_in">query</span>(x<span class="hljs-number">-1</span>) &lt;&lt; endl; <span class="hljs-comment">//求的是[a,b]的必区间</span><br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-built_in">add</span>(x,y);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>树状数组</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法 树状数组</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>algorithm_know</title>
    <link href="/2024/03/25/algorithm_know/algorithm-know/"/>
    <url>/2024/03/25/algorithm_know/algorithm-know/</url>
    
    <content type="html"><![CDATA[<h1 id="2-16"><a href="#2-16" class="headerlink" title="2.16"></a>2.16</h1><h2 id="降低时间复杂度的方法（降低运行时间防止超时）"><a href="#降低时间复杂度的方法（降低运行时间防止超时）" class="headerlink" title="降低时间复杂度的方法（降低运行时间防止超时）"></a>降低时间复杂度的方法（降低运行时间防止超时）</h2><h3 id="使用平方根去约束数的循环范围"><a href="#使用平方根去约束数的循环范围" class="headerlink" title="使用平方根去约束数的循环范围"></a>使用平方根去约束数的循环范围</h3><blockquote><p>应用场景：完全数，质数</p></blockquote><h3 id="前缀和"><a href="#前缀和" class="headerlink" title="前缀和"></a>前缀和</h3><h2 id="得到某一段数组-l-r-的和，常规循环计算的复杂度为-O-n-，使用前缀和就可以直接使用-S-r-S-l-1-，复杂度为O-1"><a href="#得到某一段数组-l-r-的和，常规循环计算的复杂度为-O-n-，使用前缀和就可以直接使用-S-r-S-l-1-，复杂度为O-1" class="headerlink" title="得到某一段数组 [l,r] 的和，常规循环计算的复杂度为 O(n) ，使用前缀和就可以直接使用 S(r) - S(l-1) ，复杂度为O(1)"></a>得到某一段数组 [l,r] 的和，常规循环计算的复杂度为 O(n) ，使用前缀和就可以直接使用 S(r) - S(l-1) ，复杂度为O(1)</h2><h3 id="差分"><a href="#差分" class="headerlink" title="差分"></a>差分</h3><h3 id="树状数组"><a href="#树状数组" class="headerlink" title="树状数组"></a>树状数组</h3><ol><li>O(log)的时间复杂度去实现单点修改和区间查询</li><li>数组下标一定要从1开始</li><li>一个数的二进制表示中末尾有几个0就在第几层</li></ol><h1 id="2-17"><a href="#2-17" class="headerlink" title="2.17"></a>2.17</h1><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><blockquote><p>求 n 的二进制表示的第 k 位数字：<code>n &gt;&gt; k &amp; 1</code><br>返回 n 的最后一位1所对应的值：lowbit(n) &#x3D; n &amp; -n &#x3D; n &amp; (n^(n-1))<br>假设一个数的二进制最低位的1在从右往左数的第k位，那么它的lowbit值就是2^(k-1)<br>树状数组C[x] &#x3D; [x-lowbit(n) , x] 原数组中这段区间的和</p></blockquote><h1 id="3-25"><a href="#3-25" class="headerlink" title="3.25"></a>3.25</h1><h2 id="n次方幂"><a href="#n次方幂" class="headerlink" title="n次方幂"></a>n次方幂</h2>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>算法小知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法小知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络复习第三章</title>
    <link href="/2024/03/25/cs_net/cs-net-3/"/>
    <url>/2024/03/25/cs_net/cs-net-3/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机网络复习第三章"><a href="#计算机网络复习第三章" class="headerlink" title="计算机网络复习第三章"></a>计算机网络复习第三章</h1><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ol><li><p>数据链路层的功能是：实现在两个通信实体之间传送数据（以 帧为单位），并通过差错控制方法，使有差错的物理线路变成无差错数据链路。数据链路层使用的信道有2种：广播信道和点对点信道。 数据链路层需要解决的三个基本问题是：封装成帧. 透明传输（如在数据中出现控制字符时加入转义字符）和差错检测（如CRC技术）。</p></li><li><p>10Mbps以太网是基带编码，使用的曼彻斯特编码，是一种自同步的数字信号编码方式，编码效率是50%；通常采用RJ45（非屏蔽双绞线）。</p></li><li><p>虚拟局域网（VLAN）技术是建立在网络交换机之上的，以硬件方式实现逻辑工作组的划分与管理，通常可以根据端口. MAC地址. IP地址等划分VLAN。同一层交换机上不同VLAN之间不能直接通信（需要使用路由器才能通信）</p></li><li><p>网络互联时使用中继器或集线器完成物理层功能，使用网桥或二层交换机完成数据链路层的功能，使用路由器或三层交换机完成网络层的功能。</p></li><li><p>常用的IEEE802协议有802.2—LLC   802.3—10Mbps CSMA&#x2F;CD以太网  802.4—令牌总线 802.5—令牌环，这些协议都属于数据链路层。以太网使用10BASE-T规定从集线器到网卡的最大距离是100米。</p></li><li><p>总线型网络和使用HUB的星型网络，任意时刻只能有一台电脑发送信息；使用SWITCH的星型网络，任意时刻可以有多台电脑发送信息。</p></li><li><p>CSMA&#x2F;CD的中文是多路载波侦听&#x2F;冲突检测，掌握其工作原理并重点掌握：用于在10Mbps以标准太网的信道访问控制，要求数据帧的发送时间是传播时间的2倍，其帧长为64–1518B，其碰撞窗口为51.2us ，总线型以太网可以检测冲突却不能避免冲突，交换型以太网可以避免冲突。发生第K次冲突后，需要等待r*51.2us之后再侦听以决定是否发送，其中r&#x3D;Min（10，x）(x取(0,1,2,3,…2k-1)中任意随机值),最多传送16次。 </p></li><li><p>通常数据在各个层次的名称不同，一般物理层称为比特. 数据链路层称为帧. 网络层称为分组. 传输层称为报文. 余下各层统称为文本。OSI&#x2F;RM协议的层次名称. 上下层次关系，TCP&#x2F;IP协议的层次名称. 上下层关系，以及OSI&#x2F;RM各层次与TCP&#x2F;IP各层次对应关系。VLAN(虚拟局域网)使用的核心设备是二层交换机。</p></li><li><p>教材图3-10的PPP格式（P75）。教材图3-22的以太网格式（P92）</p></li><li><p>CRC计算（教材 图3-8）（P71）</p></li></ol><h2 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h2><p>数据链路层需要解决的三个基本问题是：封装成帧. 透明传输和差错检测，其中在数据中出现控制字符时加入转义字符属于(   )。<br>2. 完善以太网的MAC帧格式 。</p><ol start="3"><li>以太网中采用的CSMA&#x2F;CD协议是一种能避免冲突的协议。</li><li>在一个二层交换机内划分为3个虚拟网络后，虚拟网络之间不可在本交换机内通信。</li><li>在802.3局域网中，当使用了交换技术后，可避免冲突产生。</li><li>10M以太网的碰撞窗口为51.2us  </li><li>10M以太网的标准是IEEE802.5 。</li><li>10BASE-T标准中使用的电缆为双绞线</li><li>802.3协议中源地址为（）。<br>A. 1字节  B. 4字节    C. 6字节   D. 8字节</li><li>符合OSI参考模型第二层功能的设备，均有一个MAC地址，以太网MAC地址是（）位二进制。<br>A.    64     B. 48     C. 32    D. 8<br>11.交换机是对应OSI参考模型（）的设备。<br>A. 物理层    B. 传输层    C. 网络层  D. 数据链路层<br>12目前局域网中的高端交换机使用双绞线时能适应10M&#x2F;S，100M&#x2F;S，1000M&#x2F;S的速率，依靠（  ）技术。<br>A. 线路交换    B. 令牌控制<br>C. 自动侦测    D. VLAN技术</li><li>以太网交换机不具有的功能是（）。<br>A. 地址学习    B. 数据帧转发<br>C. 路由选择    D. 回路避免</li><li>以下MAC地址哪个是正确的（）<br>A. 004         B.  00DA45<br>C. 210.47.2.34   D. 00AABB0034CC</li><li>虚拟局域网中的核心设备是（）<br>A. 高端交换机   B. 路由器<br>C. 集线器       D. 中继器</li><li>虚拟局域网的技术基础是（）。<br>A. 交换    B. 路由    C.  带宽分配    D. 冲突检测</li><li>在一个数字化的语音系统中，采用256个量化级时，编码时采用（）位。<br>A. 8           B. 7          C. 6        D. 10</li><li>具有冲突检测载波监听多路访问CSMA&#x2F;CD技术，不适用于（）。<br>A. 总线型网络    B. 星型网络<br>C. 树型网络      D. 环型网络</li><li>IEEE802.3标准中，MAC帧的帖起始定界符是（）。<br>A.  01111111（左低右高）  B. 11101011（左低右高）<br>C.  01111110（左低右高）  D. 10101011（左低右高）</li><li>CSMA&#x2F;CD协议只适用于（）。<br>A. 局域网  B. 广域网    C. 城域网    D. 以上全部</li><li>IEEE802.3中10BASE-T规定从集线器到网卡的最大距离是（）。<br>A. 50米     B. 100米      C. 200米     D. 500米</li><li>数据链路层需要解决的三个基本问题是：封装成帧. 透明传输和差错检测，其中CRC技术属于（  ）。</li></ol><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><ol><li>透明传输</li><li>类型</li><li>T</li><li>T</li><li>T</li><li>T</li><li>F</li><li>T</li><li>C</li><li>B</li><li>D</li><li>C</li><li>C</li><li>D</li><li>A</li><li>A</li><li>A</li><li>C</li><li>D</li><li>A</li><li>B</li><li>差错检测</li></ol>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络复习第二章</title>
    <link href="/2024/03/25/cs_net/cs-net-2/"/>
    <url>/2024/03/25/cs_net/cs-net-2/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机网络复习第二章"><a href="#计算机网络复习第二章" class="headerlink" title="计算机网络复习第二章"></a>计算机网络复习第二章</h1><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ol><li><p>物理层确定与传输媒体的接口有关的特性是机械特性.电气特性.功能特性和过程特性。</p></li><li><p>根据信号中代表消息的参数的取值方式不同，信号可以分为2大类，模拟信号和数字信号。从通信的双方信息的交互方式来区分，可以有三种基本方式：单工通信（只能有一个方向的通信而没有反方向的交互）.半双工通信（通信的双方都可以发送信息，但不能双方同时发送）和全双工通信（通信的双方都可以发送信息，而且双方能同时发送）。</p></li><li><p>复用方式有：频分复用（FDM）.时分复用(TDM).码分复用(CDM)和波分复用(WDM)多种，在一根光纤上复用多路光载波信号称为波分复用，利用信号频率的不同来实现电路复用的方法是频分复用，利用信号的不同时间发送来实现电路复用的方法是时分复用。</p></li><li><p>10Mbps以太网是基带编码，使用的曼彻斯特编码，是一种自同步的数字信号编码方式，编码效率是50%；通常采用RJ45（非屏蔽双绞线）。</p></li><li><p>在脉码调制PCM过程中要经过采样.量化.编码三个过程。T1和E1技术都是基本的将模拟信号转为数字信号的方法，目前我国使用的是欧洲的E1标准，E1速率是2.048Mbps，T1的速率是1.544Mbps，这两种方法都使用时分复用。</p></li><li><p>传输媒体也称为传输介质或传输媒介，它就是数据传输系统中在发送器和接收器之间的物理通路。传输媒体可分为两大类，即导引型传输媒体和非导引型传输媒体。在导引型传输媒体中，电磁波被导引沿着固体媒体（铜线或光纤）传播。非导引型传输媒体就是指自由空间。在非导引型传输媒体中，电磁波的传输常称为无线传输。一个数据通信系统包括三大部分：源系统（或发送端.发送方）.传输系统（或传输网络）和目的系统（或接收端.接收方）。</p></li></ol><h2 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h2><ol><li><p>通常一个通信系统可以划分为三大部分，即源系统（或发送端.发送方）.(   )和目的系统（或接收方.接收端）。</p></li><li><p>从通信的双方信息的交互方式来区分，可以有三种基本方式：单工通信.半双工通信和(   )。</p></li><li><p>传输媒体是数据传输系统中在发送器和接收器之间的物理通道，可以分为导向传输媒体和非导向传输媒体。无线电波属于(   )。</p></li><li><p>多个通信设备共享一个信道进行通信称为信道复用，不同的用户占用不同的带宽资源称为(   )。</p></li><li><p>在PCM调制过程中要经过量化.采样.编码三个过程。</p></li><li><p>在数据传输过程中，差错主要是由通信过程中的噪声引起的。</p></li><li><p>ADSL技术中，上行通道和下行通道的传输速率不对称。</p></li><li><p>在电路交换.分组交换与报文交换方式中，都要经过线路建立.数据传输.线路释放这3个过程。</p></li><li><p>两台计算机通过电话网通信时必须使用的设备是（）。<br>A. 调制解调器  B.网线.C.中继器    D.集线器</p></li><li><p>常用的传输介质中，带宽最大.信号传输衰减最小.抗干扰能力最强的是（）。<br>A.光纤    B.双绞线     C.同轴电缆     D.无线信道</p></li><li><p>利用信号频率的不同来实现电路复用的方法是（）。<br>A.频分多路复用   B.时分多路复用<br>C.码分多路复用   D.以上都不对</p></li><li><p>在物理层中，指明在接口电缆的各条线上出现的电压范围，属于（）。<br>A.机械特性   B.电气特性  C.功能特性   D.过程特性</p></li></ol><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><ol><li>传输系统</li><li>全双工通信</li><li>非导向传输媒体</li><li>频分复用</li><li>F</li><li>T</li><li>T</li><li>F</li><li>A</li><li>A</li><li>A</li><li>B</li></ol>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络复习第一章</title>
    <link href="/2024/03/25/cs_net/cs-net-1/"/>
    <url>/2024/03/25/cs_net/cs-net-1/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机网络复习第一章"><a href="#计算机网络复习第一章" class="headerlink" title="计算机网络复习第一章"></a>计算机网络复习第一章</h1><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ol><li><p>为网络中的数据交换而建立的规则.标准或约定称为网络协议，网络协议由三部分组成：语法（数据与控制信息的结构或格式）.语义（需要发出何种控制信息，完成何种动作以及做出何种响应）.同步（事件实现顺序的详细说明）。</p></li><li><p>Arpanet是Internet的前身，对因特网发展起到很大作用。Internet是通过路由器将多个LAN或WAN相连接形成。</p></li><li><p>计算机网络向用户提供的最重要的功能有2个：连通性和共享</p></li><li><p>所有因特网标准都是以RFC形式在因特网上发表。RFC的意思是“请求评论”</p></li><li><p>因特网从其工作方式上看，可以划分为2大块：边缘部分（由连接在因特网上的主机组成，这部分是用户直接使用的，用来进行通信和资源共享）和核心部分（由大量网络和连接这些网络的路由器组成，这部分为边缘部分提供服务，提供连通性和交换）</p></li><li><p>三网合一是指电信语音 .有线电视网和计算机网络的结合。</p></li><li><p>常用的交换方式有电路.报文和分组。在电路交换方式中要经过线路建立.数据传输.线路释放三个过程。而分组交换和报文交换不需要，因为每个分组都需要被独立进行确定“路由”处理，所以可能存在“后发先至”的现象。计算机网络通常采用分组交换方式。</p></li><li><p>网络通信常用的3种交换方式是电路交换（整个报文的比特流连续地从源点直达终点，好像在一个管道中传送）.报文交换（整个报文先送到相邻节点，全部存储下来后查找转发表，转发到下一节点）和分组交换（单个分组（这只是整个报文的一部分）传送到相邻节点，存储下来后查找转发表，转发到下一节点）。计算机网络采用的交换方式属于分组交换。</p></li><li><p>时延是计算机网络的性能指标之一，指的是数据从网络的一端传输到另一端所需的时间，通常包括发送时延（主机或路由器发送数据帧所需要的时间，也称为传输时延。发送时延&#x3D;数据帧长度&#x2F;发送速率）.传播时延（电磁波在信道中传播一定的距离所需要的时间，在自由空间的传播速率约为3.0<em>105km&#x2F;s，在铜线电缆中的传播速率约为2.3</em>105km&#x2F;s, 在光纤中的传播速率约为2.0*105km&#x2F;s。传播时延&#x3D;信道长度&#x2F;电磁波在信道上传输速率）.处理时延（主机或路由器在收到分组是需要花费一定的时间进行处理）和排队时延（分组在进入路由器后在输入队列中等待处理）。</p></li><li><p>OSI的体系结构由7层组成，从上到下分别是：应用层.表示层.会话层.运输曾.网络层.数据链路层.物理层。TCP&#x2F;IP协议由4层组成，从上向下分别为应用层.运输层.网际层（IP）和网络接口层。掌握OSI&#x2F;RM协议的各层次名称.顺序及与TCP&#x2F;IP协议的对应关系。教材图1-18</p></li><li><p>按距离进行分类，可将网络分为广域网.城域网和局域网，掌握其距离范围</p></li></ol><h2 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h2><ol><li>假定有一个10MB的数据块，在带宽为1Mb&#x2F;s的信道上连续发送，其发送时延是_____s。</li><li>因特网从其工作方式上看，可以划分为2大块：用来进行通信和资源共享属于边缘部分。提供连通性和交换的属于(   )。</li><li>网络通信有3种交换方式。其中【单个分组（这只是整个报文的一部分）传送到相邻节点，存储下来后查找转发表，转发到下一节点】属于(   )（请说明名称，不能说第一种、第二种或第三种）。</li><li>时延是计算机网络的性能指标之一，指的是数据从网络的一端传输到另一端所需的时间。其中的传播时延是指电磁波在信道中传播一定的距离所需要的时间，通常在铜线电缆中其传播速率约为(   )km&#x2F;s。</li><li>所有因特网标准都是以(   )形式在因特网上发表。其意思是“请求评论”。</li><li>网络协议由三部分组成：语法、语义和同步，其中需要发出何种控制信息，完成何种动作以及做出何种响应属于(   )。</li><li>OSI的体系结构由7层组成，从下向上，第六层是(   )。</li><li>TCP&#x2F;IP协议由4层组成，从上向下，UDP是属于(   )。</li><li>电磁波在光纤中传播的速率大约为2.0*105km&#x2F;s,长度为1000km的光纤传播时延是（    ）s。</li></ol><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><ol><li>83.89</li><li>核心部分</li><li>分组交换</li><li>2.3*105km&#x2F;s</li><li>RFC</li><li>语义</li><li>表示层</li><li>运输层</li><li>0.005</li></ol>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>first-test-blog</title>
    <link href="/2024/03/25/first-test-blog/"/>
    <url>/2024/03/25/first-test-blog/</url>
    
    <content type="html"><![CDATA[<h1 id="这是一个测试博客"><a href="#这是一个测试博客" class="headerlink" title="这是一个测试博客"></a>这是一个测试博客</h1><h1 id="浅浅许个愿：保研上岸"><a href="#浅浅许个愿：保研上岸" class="headerlink" title="浅浅许个愿：保研上岸"></a>浅浅许个愿：保研上岸</h1>]]></content>
    
    
    <categories>
      
      <category>测试</category>
      
      <category>保研</category>
      
    </categories>
    
    
    <tags>
      
      <tag>保研</tag>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
